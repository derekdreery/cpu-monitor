environment:
  global:
    RUST_VERSION: stable
    PROJECT_NAME: cpu-monitor
  matrix:
    # Stable channel
    - TARGET: i686-pc-windows-gnu
    - TARGET: i686-pc-windows-msvc
    - TARGET: x86_64-pc-windows-gnu
    - TARGET: x86_64-pc-windows-msvc
    # Nightly channel
    - TARGET: i686-pc-windows-gnu
      RUST_VERSION: nightly
    - TARGET: i686-pc-windows-msvc
      RUST_VERSION: nightly
    - TARGET: x86_64-pc-windows-gnu
      RUST_VERSION: nightly
    - TARGET: x86_64-pc-windows-msvc
      RUST_VERSION: nightly
    allow_failures:
      - RUST_VERSION: nightly
      # Bug report: https://github.com/budziq/rust-skeptic/issues/87
      - TARGET: i686-pc-windows-gnu
      - TARGET: x86_64-pc-windows-gnu

# Install Rust and Cargo
# (Based on from https://github.com/rust-lang/libc/blob/master/appveyor.yml)
install:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      }
  - curl -sSf -o rustup-init.exe https://win.rustup.rs
  - rustup-init.exe --default-host %TARGET% --default-toolchain %RUST_VERSION% -y
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V

# 'cargo test' takes care of building for us, so disable Appveyor's build stage. This prevents
# the "directory does not contain a project or solution file" error.
# source: https://github.com/starkat99/appveyor-rust/blob/master/appveyor.yml#L113
build: false

# Equivalent to Travis' `script` phase
# TODO modify this phase as you see fit
test_script:
  - cargo build --verbose --all
  - cargo test --verbose --all

cache:
  - C:\Users\appveyor\.cargo\registry
  - target


